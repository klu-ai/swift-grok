# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker compose build
#      Start app: docker compose up app
#       Stop all: docker compose down
#

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  # Uncomment to set cookies as an environment variable instead of a file
  # GROK_COOKIES: '{"x-anonuserid":"your-id","x-challenge":"your-challenge","x-signature":"your-signature","sso":"your-sso","sso-rw":"your-sso-rw"}'
  
services:
  app:
    image: grok-proxy:latest
    build:
      context: .
    volumes:
      # Mount credentials file if available (recommended)
      - ${PWD}/credentials.json:/app/credentials.json:ro
      # OR: Uncomment to mount browser cookie directory to allow auto-generation (less secure)
      # BROWSER COOKIE MOUNTS - Uncomment ONE of these options if needed:
      # For Chrome on Linux:
      # - ~/.config/google-chrome:/browser-cookies/chrome:ro
      # For Chrome on macOS:
      # - ~/Library/Application\ Support/Google/Chrome:/browser-cookies/chrome:ro
      # For Firefox on macOS:
      # - ~/Library/Application\ Support/Firefox/Profiles:/browser-cookies/firefox:ro
    ports:
      - '8080:8080'
    # user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
    command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]
    environment:
      <<: *shared_environment
      # Uncomment to enable credential generation at startup if credentials.json is missing
      # GENERATE_CREDENTIALS: "true"
